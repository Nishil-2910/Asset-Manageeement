@{
    Layout = Layout;
    var uld = (MobileReimbursement.Models.UserLoginData)Session["UserObject"];
    var empno = uld.EMPNO;
    var itadmin = @ViewBag.ITAdmin;
    var isadmin = 0;
    if (itadmin.Contains(empno))
        isadmin = 1;        
}

<form class="form-horizontal" id="frm_pendingAllocation" name="frm_pendingAllocation" method="post" action="" novalidate="novalidate">
    <div class="widget-box col-sm-12">
        <div class="widget-body">
            <div class="widget-main">
                <div class="form-group">
                    <div class="widget-body">
                        <div class="widget-main">
                            <div id="gv_AssetList">
                                <table id="jqTable2"></table>
                                <div id="jqTablePager2">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="viewAssetRequest" class="form-horizontal hide">
        <div class="col-xs-12 col-sm-12">
            <div class="clearfix">
                <textarea class="col-xs-12 col-sm-12 limited" id="txt_remarks" name="txt_remarks" maxlength="100"></textarea>
            </div>
        </div>
    </div>
    
    <div id="ApproveAssetRequest" class="form-horizontal hide">
        <iframe id="if_ApproveAssetRequest"></iframe>
    </div>
</form>
<script type="text/javascript" src="~/Scripts/jQuery.GridList.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        LoadGridData();
    });
    @*function LoadGridData() {
        var objurl = '@Url.Content("~/Asset/GetPendingAllocationListJQGrid")';
        var jqTable = '#jqTable2';
        var jqTablePager = '#jqTablePager2';
        var objcolNames = ['Action', 'Req.No', 'Location', 'Req.Date', 'Item', 'Empno', 'Requster Name', 'Department', 'Req. for Whom', 'Designation', 'Exp.Joining Date'];
        var objcolModel = [
                            {
                                name: 'Action', index: 'Action', width: 60, search: false, formatter: function (cellvalue, options, rowObject) {
                                    //debugger;
                                    if('@isadmin' == '1')
                                        return "<div title=\"Approve\" style=\"float:left; cursor:pointer;\" class=\"ui-pg-div ui-inline-edit\" id=\"jEditButton_1\" onclick=\"AllocationAsset('" + rowObject[1] + "','" + rowObject[5] + "'); \" title=\"Approve\">&nbsp;&nbsp;<span class=\"ui-icon fa-check fa-1x bigger-120  green\"></span></div><div title=\"Delete\" style=\"float:left; cursor:pointer;\" class=\"ui-pg-div ui-inline-edit\" id=\"jEditButton_1\" onclick=\"DeleteAssetRequest('" + rowObject[1] + "'); \" title=\"Delete\">&nbsp;&nbsp;<span class=\"ace-icon fa fa-trash-o bigger-120 red\"></span></div>";
                                    else
                                        return "<div title=\"Approve\" style=\"float:left; cursor:pointer;\" class=\"ui-pg-div ui-inline-edit\" id=\"jEditButton_1\" onclick=\"AllocationAsset('" + rowObject[1] + "','" + rowObject[5] + "'); \" title=\"Approve\">&nbsp;&nbsp;<span class=\"ui-icon fa-check fa-1x bigger-120  green\"></span></div>";
                                }
                            },
                            { name: 'Nrequestno', index: 'Nrequestno', width: 65, search: true },
                            { name: 'Locationname', index: 'Locationname', width: 80 },
                            { name: 'Dinsertdate', index: 'Dinsertdate', width: 80 },
                            { name: 'ItemName', index: 'ItemName', width: 65 },
                            { name: 'Vempno', index: 'Vempno', width: 65 },
                            { name: 'Vempname', index: 'Vempname', width: 170 },
                            { name: 'DEPTNAME', index: 'DEPTNAME', width: 140 },
                            { name: 'Engname', index: 'Engname', width: 130 },
                            { name: 'DESIGNATION', index: 'DESIGNATION', width: 100 },
                            { name: 'AllocationDate', index: 'AllocationDate', width: 120 },
        ];
        var objcaption = "Pending Asset Allocation Request";
        var objjqGridonSelectRow = null;
        var objsortname = "Nrequestno";
        var objsortorder = "desc";
        jQuery(jqTable).jqGrid('clearGridData');
        jQuery(jqTable).jqGrid('setGridParam', { url: objurl });
        //jQuery(jqTable).jqGrid('setGridParam', { filterToolbar: { stringResult: true, searchOnEnter: false } });
        jQuery.GridList.Grid(jqTable, jqTablePager, objcolNames, objcolModel, objurl, objcaption, objsortname, objsortorder, objjqGridonSelectRow);
        //jQuery(jqTable).jqGrid('filterToolbar', { stringResult: true, searchOnEnter: false });
        jQuery(jqTable).trigger('reloadGrid');
    }*@

    function LoadGridData() {
        var objurl = '@Url.Content("~/Asset/GetPendingAllocationListJQGrid")';
        var jqTable = '#jqTable2';
        var jqTablePager = '#jqTablePager2';
        var objcolNames = ['Action', 'Req.No', 'Location', 'Req.Date', 'Item', 'Empno', 'Requster Name', 'Department', 'Req. for Whom', 'Designation', 'Exp.Joining Date'];
        var objcolModel = [
                            {
                                name: 'Action', index: 'Action', width: 60, search: false, formatter: function (cellvalue, options, rowObject) {
                                    //debugger;
                                    if('@isadmin' == '1')
                                        return "<div title=\"Approve\" style=\"float:left; cursor:pointer;\" class=\"ui-pg-div ui-inline-edit\" id=\"jEditButton_1\" onclick=\"AllocationAsset('" + rowObject[1] + "','" + rowObject[5] + "'); \" title=\"Approve\">&nbsp;&nbsp;<span class=\"ui-icon fa-check fa-1x bigger-120  green\"></span></div><div title=\"Delete\" style=\"float:left; cursor:pointer;\" class=\"ui-pg-div ui-inline-edit\" id=\"jEditButton_1\" onclick=\"DeleteAssetRequest('" + rowObject[1] + "'); \" title=\"Delete\">&nbsp;&nbsp;<span class=\"ace-icon fa fa-trash-o bigger-120 red\"></span></div>";
                                    else
                                        return "<div title=\"Approve\" style=\"float:left; cursor:pointer;\" class=\"ui-pg-div ui-inline-edit\" id=\"jEditButton_1\" onclick=\"AllocationAsset('" + rowObject[1] + "','" + rowObject[5] + "'); \" title=\"Approve\">&nbsp;&nbsp;<span class=\"ui-icon fa-check fa-1x bigger-120  green\"></span></div>";
                                }
                            },
                            { name: 'Nrequestno', index: 'Nrequestno', width: 65, search: true },
                            { name: 'Locationname', index: 'Locationname', width: 80 },
                            { name: 'Dinsertdate', index: 'Dinsertdate', width: 80 },
                            { name: 'ItemName', index: 'ItemName', width: 65 },
                            { name: 'Vempno', index: 'Vempno', width: 65 },
                            { name: 'Vempname', index: 'Vempname', width: 170 },
                            { name: 'DEPTNAME', index: 'DEPTNAME', width: 140 },
                            { name: 'Engname', index: 'Engname', width: 130 },
                            { name: 'DESIGNATION', index: 'DESIGNATION', width: 100 },
                            { name: 'AllocationDate', index: 'AllocationDate', width: 120 },
        ];
        var objcaption = "Pending Asset Allocation Request";
        var objjqGridonSelectRow = null;
        var objsortname = "Nrequestno";
        var objsortorder = "desc";
        jQuery(jqTable).jqGrid('clearGridData');
        jQuery(jqTable).jqGrid('setGridParam', { url: objurl });
        //jQuery(jqTable).jqGrid('setGridParam', { filterToolbar: { stringResult: true, searchOnEnter: false } });
        jQuery.GridList.Grid(jqTable, jqTablePager, objcolNames, objcolModel, objurl, objcaption, objsortname, objsortorder, objjqGridonSelectRow);
        //jQuery(jqTable).jqGrid('filterToolbar', { stringResult: true, searchOnEnter: false });
        jQuery(jqTable).trigger('reloadGrid');
        jQuery(jqTable).navGrid(jqTablePager,
            {
                edit: false,
                editicon: 'ace-icon fa fa-pencil blue',
                add: false,
                addicon: 'ace-icon fa fa-plus-circle purple',
                del: false,
                delicon: 'ace-icon fa fa-trash-o red',
                search: false,
                searchicon: 'ace-icon fa fa-search orange',
                refresh: true,
                refreshicon: 'ace-icon fa fa-refresh green',
                view: false,
                viewicon: 'ace-icon fa fa-search-plus grey',
            },
            {}, // settings for edit
            {}, // settings for add
            {}, // settings for delete
            {
                sopt: ['cn']
                //sopt: ['eq', 'ne', 'cn', 'nc', 'bw', 'ew'] // Search options. Some options can be set on column level
            }

        ).navButtonAdd(jqTablePager, {
            caption: "",
            title: "Download Excel",
            id: "btn_report",
            buttonicon: "ace-icon fa fa-file-excel-o  bigger-140",
            position: "last",
            onClickButton: function (e) {
                $("#btn_excel").click(
                    ExporttoExcel()
                );
            }
        });
    }

    function ExporttoExcel() {
        var formid = 'frm_pendingAllocation';
        var Form = document.getElementById(formid);
        Form.action = '@Url.Action("DownloadAllocationRequest", "Asset")';
        Form.submit();
    }

    function Displaydiv(objurl, objtitle, ComplainNo) {
        $("#callassign").removeClass('hide').dialog({
            resizable: false,
            width: '70%',
            height: 600,
            modal: true,
            autoOpen: true,
            closeOnEscape: true,
            position: { my: 'top', at: 'top+50' },
            title_html: true,
            title: objtitle,
            buttons: [
                                {
                                    html: "<i class='ace-icon fa fa-check bigger-110 dark'></i><span style='color: #121212' accesskey='s'>&nbsp; Submit</span>",
                                    "class": "btn",
                                    "style": "padding: 8px;",
                                    click: function () {
                                        // $(this).dialog("close");
                                        AdminAssignCheck();

                                    }
                                },
                               {
                                   html: "<i class='ace-icon fa fa-undo bigger-110 dark'></i><span style='color: #121212' accesskey='r'>&nbsp; Reset</span>",
                                   "class": "btn",
                                   "style": "padding: 8px;",
                                   "type": "reset",
                                   click: function () {

                                       var validator = $(".form").validate();
                                       clearValidation($(".form"));
                                       clearFileInput("fileToUpload"); //Reset Fileupload
                                       $(".error").removeClass("error");
                                       //validator.resetForm();
                                   }
                               },
                               {
                                   html: "<i class='ace-icon fa fa-times bigger-110 dark'></i><span style='color: #121212' accesskey='c'>&nbsp; Close</span>",
                                   "class": "btn",
                                   "style": "padding: 8px;",
                                   click: function () {
                                       $(this).dialog("close");
                                   }
                               }
            ]
        });
        $('#callassign').load(objurl, {});

    }

    function AllocationAsset_Old(Reqno, Empno) {
        var objurl = '@Url.Content("~/Asset/Assetallocation")';
        objurl = objurl + "?Reqno=" + Reqno + "&Empno=" + Empno;


        $('#ApproveAssetRequest').load(objurl, {}, function (response, status, xhr) {
            if (status == "success") {
                //$("#ApproveAssetRequest").removeClass('hide').dialog({
                $("#ApproveAssetRequest").dialog({
                    resizable: false,
                    width: '70%',
                    height: 600,
                    modal: true,
                    autoOpen: true,
                    closeOnEscape: true,
                    position: { my: 'top', at: 'top+50' },
                    title_html: true,
                    title: "",
                    buttons: [
                                    {
                                        html: "<i class='ace-icon fa fa-times bigger-110 dark'></i><span style='color: #121212' accesskey='c'>&nbsp; Close</span>",
                                        "id": "btn_close",
                                        "name": "btn_close",
                                        "class": "btn",
                                        "style": "padding: 8px;",
                                        click: function () {
                                            //var IframeID = document.getElementById("if_ApproveAssetRequest");
                                            //var frameDocument = IframeID.contentDocument || IframeID.contentWindow.document;
                                            //alert(frameDocument.getElementById("txt_hostname").value);

                                            $(this).dialog("close");
                                        }
                                    }
                    ]
                });
            }
        });

    }

    function AllocationAsset(Reqno, Empno) {
        var objurl = '@Url.Content("~/Asset/Assetallocation")';
        objurl = objurl + "?Reqno=" + Reqno + "&Empno=" + Empno;
        var objwidth = window.innerWidth * 0.85;
        var objheight = window.innerHeight * 0.85;
        $("#if_ApproveAssetRequest").attr("src", objurl);
        var objbuttons = [
                            {
                                html: "<i class='ace-icon fa fa-times bigger-110 dark'></i><span style='color: #121212' accesskey='c'>&nbsp; Close</span>",
                                "id": "btn_close",
                                "name": "btn_close",
                                "class": "btn",
                                "style": "padding: 8px;",
                                click: function () {
                                    //var IframeID = document.getElementById("if_ApproveAssetRequest");
                                    //var frameDocument = IframeID.contentDocument || IframeID.contentWindow.document;
                                    //alert(frameDocument.getElementById("txt_hostname").value);

                                    $(this).dialog("close");
                                }
                            }
        ];
        objdiologdiv = "ApproveAssetRequest";
        $('#' + objdiologdiv).removeClass('hide').dialog({
            resizable: false,
            width: objwidth,
            height: objheight,
            modal: true,
            autoOpen: true,
            closeOnEscape: true,
            position: { my: 'top', at: 'top+50' },
            title_html: true,
            title: "",
            buttons: objbuttons
        });

        $("#if_ApproveAssetRequest").width($('#' + objdiologdiv).width() - 10);
        $("#if_ApproveAssetRequest").height($('#' + objdiologdiv).height() - 10);
    }
    function DeleteAssetRequest(Reqno) {
        var objbuttons = [
                            {
                                html: "<i class='ace-icon fa fa-floppy-o icon-on-right'></i><span style='color: #121212' accesskey='c'>&nbsp; Submit</span>",
                                "id": "btn_approve",
                                "name": "btn_approve",
                                "class": "btn btn-success btn-next",
                                "style": "padding: 8px;",
                                click: function () {
                                    SaveData(Reqno, $("#txt_remarks").val());
                                    $(this).dialog("close");
                                }
                            },
                            {
                                html: "<i class='ace-icon fa fa-times bigger-110 dark'></i><span style='color: #121212' accesskey='c'>&nbsp; Close</span>",
                                "id": "btn_close",
                                "name": "btn_close",
                                "class": "btn",
                                "style": "padding: 8px;",
                                click: function () {
                                    $(this).dialog("close");
                                }
                            }
        ];
        objdiologdiv = "viewAssetRequest";
        $('#' + objdiologdiv).removeClass('hide').dialog({
            resizable: false,
            width: '75%',
            height: 250,
            modal: true,
            autoOpen: true,
            closeOnEscape: true,
            position: { my: 'top', at: 'top+50' },
            title_html: true,
            title: "Enter Cancellation Remark",
            buttons: objbuttons
        });
    }
    function SaveData(Reqno, Remarks) {
        var formid = 'frm_pendingAllocation';
        var obj = validateForm(formid);
        if (obj.form()) {
            var Form = document.getElementById(formid);
            $.ajax({
                url: "../Asset/RejectApprovedRequest?Reqno=" + Reqno + "&Remarks=" + Remarks,
                type: 'POST',
                async: false,
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                success: function (a) {
                    if (a.MessageCode == "-1") {
                        ShowError(a.message);
                        return false;
                    }
                    else {
                        ShowSuccess(a.message);
                        $("#refresh_jqTable2").click();
                    }
                }, error: function (a) { alert(a) }
            });
        }
        else {
            var Form = document.getElementById(formid);
            Form.action = "";
            return false;
        }
    }
    function validateForm(formid) {
        return $("#" + formid).validate({
            errorElement: 'div',
            errorClass: 'help-block',
            focusInvalid: false,
            ignore: "",
            rules: {
                txt_remarks: {
                    required: true
                }
            },
            messages: {
                txt_remarks: {
                    required: "Please Enter Remarks"
                }
            },
            highlight: function (e) {
                $(e).closest('.form-group').removeClass('has-info').addClass('has-error');
            },

            success: function (e) {
                $(e).closest('.form-group').removeClass('has-error'); //.addClass('has-info');
                $(e).remove();
            },

            errorPlacement: function (error, element) {
                if (element.is('input[type=checkbox]') || element.is('input[type=radio]')) {
                    var controls = element.closest('div[class*="col-"]');
                    if (controls.find(':checkbox,:radio').length > 1) controls.append(error);
                    else error.insertAfter(element.nextAll('.lbl:eq(0)').eq(0));
                }
                else if (element.is('.select2')) {
                    error.insertAfter(element.siblings('[class*="select2-container"]:eq(0)'));
                }
                else if (element.is('.chosen-select')) {
                    error.insertAfter(element.siblings('[class*="chosen-container"]:eq(0)'));
                }
                else error.insertAfter(element.parent());
            },

            submitHandler: function (form) {
            },
            invalidHandler: function (form) {
            }
        });
    }
</script>